#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;

#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define endl "\n"
#define INF 1000000000
#define MOD 1000000007
int sol[92][8] = {
{1, 5, 8, 6, 3, 7, 2, 4},
{1, 6, 8, 3, 7, 4, 2, 5},
{1, 7, 4, 6, 8, 2, 5, 3},
{1, 7, 5, 8, 2, 4, 6, 3},
{2, 4, 6, 8, 3, 1, 7, 5},
{2, 5, 7, 1, 3, 8, 6, 4},
{2, 5, 7, 4, 1, 8, 6, 3},
{2, 6, 1, 7, 4, 8, 3, 5},
{2, 6, 8, 3, 1, 4, 7, 5},
{2, 7, 3, 6, 8, 5, 1, 4},
{2, 7, 5, 8, 1, 4, 6, 3},
{2, 8, 6, 1, 3, 5, 7, 4},
{3, 1, 7, 5, 8, 2, 4, 6},
{3, 5, 2, 8, 1, 7, 4, 6},
{3, 5, 2, 8, 6, 4, 7, 1},
{3, 5, 7, 1, 4, 2, 8, 6},
{3, 5, 8, 4, 1, 7, 2, 6},
{3, 6, 2, 5, 8, 1, 7, 4},
{3, 6, 2, 7, 1, 4, 8, 5},
{3, 6, 2, 7, 5, 1, 8, 4},
{3, 6, 4, 1, 8, 5, 7, 2},
{3, 6, 4, 2, 8, 5, 7, 1},
{3, 6, 8, 1, 4, 7, 5, 2},
{3, 6, 8, 1, 5, 7, 2, 4},
{3, 6, 8, 2, 4, 1, 7, 5},
{3, 7, 2, 8, 5, 1, 4, 6},
{3, 7, 2, 8, 6, 4, 1, 5},
{3, 8, 4, 7, 1, 6, 2, 5},
{4, 1, 5, 8, 2, 7, 3, 6},
{4, 1, 5, 8, 6, 3, 7, 2},
{4,2,5,8,6,1,3,7}
,{4,2,7,3,6,8,1,5}
,{4,2,7,3,6,8,5,1}
,{4,2,7,5,1,8,6,3}
,{4,2,8,5,7,1,3,6}
,{4,2,8,6,1,3,5,7}
,{4,6,1,5,2,8,3,7}
,{4,6,8,2,7,1,3,5}
,{4,6,8,3,1,7,5,2}
,{4,7,1,8,5,2,6,3}
,{4,7,3,8,2,5,1,6}
,{4,7,5,2,6,1,3,8}
,{4,7,5,3,1,6,8,2}
,{4,8,1,3,6,2,7,5}
,{4,8,1,5,7,2,6,3}
,{4,8,5,3,1,7,2,6}
,{5,1,4,6,8,2,7,3}
,{5,1,8,4,2,7,3,6}
,{5,1,8,6,3,7,2,4}
,{5,2,4,6,8,3,1,7}
,{5,2,4,7,3,8,6,1}
,{5,2,6,1,7,4,8,3}
,{5,2,8,1,4,7,3,6}
,{5,3,1,6,8,2,4,7}
,{5,3,1,7,2,8,6,4}
,{5,3,8,4,7,1,6,2}
,{5,7,1,3,8,6,4,2}
,{5,7,1,4,2,8,6,3}
,{5,7,2,4,8,1,3,6}
,{5,7,2,6,3,1,4,8}
,{5,7,2,6,3,1,8,4}
,{5,7,4,1,3,8,6,2}
,{5,8,4,1,3,6,2,7}
,{5,8,4,1,7,2,6,3}
,{6,1,5,2,8,3,7,4}
,{6,2,7,1,3,5,8,4}
,{6,2,7,1,4,8,5,3}
,{6,3,1,7,5,8,2,4}
,{6,3,1,8,4,2,7,5}
,{6,3,1,8,5,2,4,7}
,{6,3,5,7,1,4,2,8}
,{6,3,5,8,1,4,2,7}
,{6,3,7,2,4,8,1,5}
,{6,3,7,2,8,5,1,4}
,{6,3,7,4,1,8,2,5}
,{6,4,1,5,8,2,7,3}
,{6,4,2,8,5,7,1,3}
,{6,4,7,1,3,5,2,8}
,{6,4,7,1,8,2,5,3}
,{6,8,2,4,1,7,5,3}
,{7,1,3,8,6,4,2,5}
,{7,2,4,1,8,5,3,6}
,{7,2,6,3,1,4,8,5}
,{7,3,1,6,8,5,2,4}
,{7,3,8,2,5,1,6,4}
,{7,4,2,5,8,1,3,6}
,{7,4,2,8,6,1,3,5}
,{7,5,3,1,6,8,2,4}
,{8,2,4,1,7,5,3,6}
,{8,2,5,3,1,7,4,6}
,{8,3,1,6,2,5,7,4}
,{8,4,1,3,6,2,7,5} };

/*int rows[8];

bool place(int row, int col) {
    for (int i = 0; i < row; i++)
        if (rows[i] == col || abs(col - rows[i]) == abs(row - i))
            return false;
    return true;
}
void backtrack(int n) {
    if (n == 8) {
        for (int i = 0; i < 8; i++)
            cout << " " << rows[i];
        cout << endl;
        return;
    }
    else
        for (int i = 1; i <= 8; i++)
            if (place(n, i)) {
                rows[n] = i;
                backtrack(n + 1);
            }
}*/

int main() {
    ios::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    //freopen("input", "r", stdin);
    //freopen("output", "w", stdout);
    //memset(rows, 0, sizeof(rows));
    //backtrack(0);
    int a, b, c, d, e, f, g, h;
    int counter = 0;
    while (cin >> a >> b >> c >> d >> e >> f >> g >> h) {
        counter++;
        int ans = INF;
        int arr[8]{ a,b,c,d,e,f,g,h };
        for (int i = 0; i < 92; i++) {
            int temp = 0;
            for (int j = 0; j < 8; j++)
                if (sol[i][j] != arr[j])
                    temp++;
            ans = min(temp, ans);
        }
        cout << "Case " << counter << ": " << ans << endl;

    }
    return 0;
}